<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>常见问题 on Engine GO</title>
    <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
    <description>Recent content in 常见问题 on Engine GO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Jul 2019 00:10:14 +0800</lastBuildDate>
    
	<atom:link href="https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一文理解字符串编码</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E4%B8%80%E6%96%87%E7%90%86%E8%A7%A3%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81/</link>
      <pubDate>Sat, 06 Jul 2019 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E4%B8%80%E6%96%87%E7%90%86%E8%A7%A3%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81/</guid>
      <description>在打开网页或者文件的时候，你一定会遇过像这样的字符串乱码问题：
 É��OÇ��，常见的操作系统包括&amp;hellip;
 同时或多或少也遇到Unicode, UTF-8, ASCII, Latin-1这些编码术语。编码问题可以说是新人必踩坑，虽然从最后的解决方案来看，可能两三句代码就能解决，但是实际大部分开发者，包括我以前，也没有真正地理解它。原因并不是因为它复杂，而是它涉及了计算机科学中一个常见的问题，理论与工程实现的区别。理论上我们只需要按照A方案就可以解决问题，但是实际上，由于不同语言，不同系统的历史原因，实现的方案就变成多个，许多编程语言的编码实现都不同。所以要真正地理解字符串编码，首先需要了解计算机的一些基础知识，包括字符串如何存储在计算机硬盘中。如果只是希望靠运气来解决或者避开它，反而会在一次次盲目的尝试中浪费更多的时间。如果你不熟悉Python代码的话，完全可以跳过这篇文章所有的代码段，它不会影响你对这篇文章的影响。
 基础术语 计算机如何存储数据 ASCII编码 GBK编码 Unicode UTF-8编码 HTML实体编码 URL编码 常见问题 总结  基础术语  字符 字符串 键值表 字符串编码与解码  字符 A B C 天 气 エ ン コ 😁  上面的用空格分割的都是单个字符(Character)，它代表对人类能看懂的有意义的语言文字。
字符串 Hello 天气 Hola  字符串(Strings)就是多个字符组成的集合
键值表 一一对应的表，函数
y = x * 2  中每个x都对应着唯一的一个y值，x与y组成的集合就是键值表(Hash Table)，例如：
1 -&amp;gt; 2 2 -&amp;gt; 4 3 -&amp;gt; 6  这里的每一个x(1, 2, 3)都有对应的y(2, 4, 6)</description>
    </item>
    
    <item>
      <title>公私钥加密</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%85%AC%E7%A7%81%E9%92%A5%E5%8A%A0%E5%AF%86/</link>
      <pubDate>Mon, 07 May 2018 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%85%AC%E7%A7%81%E9%92%A5%E5%8A%A0%E5%AF%86/</guid>
      <description>简介 对称密码 非对称密码 数字签名 SSH登录 Https传输 API调用  简介 我接触过不少工程师对于对称加密，非对称加密，公钥和私钥只停留在应用的层面，而并不了解背后的原理。所以在开发过程中犯了不少错误，而通常涉及加密传输或者加密存储的错误都比较严重，这篇文章着重介绍了密码学常用的工具以及常见场景。
对称密码 我们日常接触最多的就是对称密码，它最重要的性质有两点：
 对称密码中加密和解密使用的是同一个密码。 对称密码中加密后的密文只有该对称密码才能解密。  对称加密有很多名称，例如对称密码，私钥密码，它类似家里的保险柜，把密码设置成9527然后锁上，那么也需要使用9527才能打开。当你要把“芹菜，香菜”利用对称密码“000111”传输给朋友：
# 原文 芹菜，香菜 # 约定一个密钥（不能被第三方知道） 000111 # 把信息和对称密钥异或运算，得到密文 101100  这时候你可以直接把密文“101100”告诉你的朋友。你的朋友使用约定的密钥“000111”对密文进行再一次异或就能得到原文。实际使用中，加解密不止异或一次那么简单，通常会使用分组密码多次迭代异或。常用的对称加密算法有DES与AES。
    DES AES     密钥长度 56位 128, 192, 256 位   加密方式 对称分组密码 对称分组密码   加密轮数 16轮 128位10轮，192位12轮，256位14轮   安全性 被攻破 安全   速度 较慢 较快    密钥配送 对称密码最大的问题是密钥配送问题，也就是如何约定只有传输者和接受者都知道并且足够长的密钥“000111”，任何得到这个密钥的人都能够解密信息。常用的解决方法有两种：</description>
    </item>
    
    <item>
      <title>如何准备技术面试</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/</link>
      <pubDate>Tue, 19 Feb 2019 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/</guid>
      <description>本文章由 ResumeJob 贡献，ResumeJob 能帮助你审视简历，模拟面试，重新规划你的职业生涯。
刚开始参加工作的时候，我对面试总是很恐惧，既担心简历无法通过初筛，也担心即使简历通过筛选，因为面试经验不多以及基础知识不扎实而导致发挥不好。我刚开始拿着普通的简历（专业不是计算机，作品也没多少）也得到了一线大厂的面试机会，但是因为根本没有准备，也不知道怎么准备。自然地，那次面试我表现得不好，也没有得到 Offer。
恐惧也使我不想浪费时间去面试不同类型的公司。我当初并不知道对比其他求职者，自己的优势和劣势在哪里，也不知道如何去准备面试，面试官看重的是哪些方面，更不知道自己到底值多少钱。现在回过头看，我觉得当初只是在欺骗自己，我真正担心的是即使自己认真准备简历和面试也对结果毫无影响，更不敢去想如果放弃某个 Offer，找不到其他工作怎么办。
工作了几年，当我有了越来越多的面试官的经验之后，我越来越发现认真准备简历和面试是非常重要的，因为毫无准备就来面试的求职者真的太多了。而且互联网公司招聘到合适的工程师实在非常难，有计算机基础知识，有项目经验，愿意学习而且愿意来这家公司，实在不好找。所以只要求职者能证明自己有一定的计算机水平并且愿意努力，市场上还是有非常多机会的。
这篇文章我把这几年作为面试者和面试官身份的的经验給大家，希望大家可以从中学到一些面试的技巧，找到心仪的工作。大家也可以使用 ResumeJob 进行简历 Review 和模拟面试，这样既能节省请假面试的时间，也能根据我们的反馈改善自己面试的表现。这样在真实面试的时候更有把握。
1. 分析阶段 1.1 公司需要怎样的员工 我很喜欢 Google 前 CEO 施密特分享的一个故事，他刚到 Google 的时候，Google 还只是个小的创业公司。他一开始以为 Google 和其他公司没什么两样，直到有一个周五，拉里佩奇在用谷歌搜索一些关键字的时候，他发现出现了一些不相干的广告推荐（这个情况我们现在在国内最大的搜索引擎也经常看到）。施密特以为接下来就是开几个会议，然后分到具体的工程师手上解决。但是拉里佩奇没有这么做，他用纸条写下&amp;rdquo;These Ads Suck!&amp;ldquo;，附上相关的截图贴在布告栏上就回家了。接下来的 72 小时彻底改变了施密特的认知。在周一凌晨 5点，有几位并不是负责广告业务的工程师发来一份邮件，从头到尾阐述了这个问题产生的原因，他们的解决方案，以及这个计划对公司有什么影响。他们从公司的角度去思考，自愿自发地用周末的时间去解决并不属于自己范畴的问题。
这样的员工我想就是每个公司都需要的：
 不错的技术能力，工作认真负责，可以及时解决问题，能给公司带来实际效益 出色的团队合作精神，能与团队一起成长 愿意自我学习，投资自己  所以求职者的简历与面试中必须能体现出这几点品质。举个例子，要在简历或者面试中展现自己喜欢学习计算机知识，与其笼统地说：
 热爱计算机，喜欢学习计算机系统的知识。
 可以改为：
 喜欢阅读计算机系统的书籍，完成《深入理解计算机系统》80% 以上的习题。并在博客（链接）分享学到的知识。
 面试官在筛选简历看到的时候就会自然地打开博客，进一步地了解求职者（恭喜你，击败了其他 80% 的求职者）。另外，一些软技能，例如团队合作能力也是面试官非常注重的一点，面试过程中如果被问到有没有带领团队的经验，即使没有也不要简单地回答没有，可以这样回答：
 “我在以往的项目中与团队成员都能融洽相处，并且每个月都会做定期的技术分享互相学习，虽然没有带团队的机会，但是相信自己能够做到。”
 当然这些回答不可能一下子能想到，面试方面的技巧必须多练。重要的是在职期间定期找几家公司面试练练手，一方面能知道市场的行情，找到其他更好工作机会，另一方面本身自己就有工作，等于手拿一个 Offer，面试的时候就能比较放松。未雨绸缪对于一位工程师尤为重要。等到离职再找工作就比较晚了。
1.2 员工需要怎样的公司 找新工作之前，求职者需要先认真思考下几个问题，一份工作中你最看重的是哪些方面？
 薪酬 公司名气与规模 公司福利／工作环境 / 地点 工作方向（假如你要从技术转向管理，这个岗位提供这样的可能吗？) 工程师文化 个人成长  有时候薪酬远不及公司名气与规模 / 工程师文化重要，有的公司能聚集一批优秀的工程师，那么只要认真待一两年，进步速度远比其他地方快，以后跳槽也会更加容易。有的厂则能提供大量隐性的福利（国内可以参考腾讯）。求职者需要真正地去思考自己想要去怎么样的公司。工作和找男女朋友一样，找你喜欢的，而不是找你能找到的。前几家公司的选择对你的职业规划会有很大的影响，大公司还是小公司，和你个人的性格或者职业规划有直接的关系：</description>
    </item>
    
    <item>
      <title>如何写一份更好的简历</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%BB%BD%E6%9B%B4%E5%A5%BD%E7%9A%84%E7%AE%80%E5%8E%86/</link>
      <pubDate>Fri, 16 Nov 2018 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%BB%BD%E6%9B%B4%E5%A5%BD%E7%9A%84%E7%AE%80%E5%8E%86/</guid>
      <description>本文章由 ResumeJob 贡献，ResumeJob 能帮助你审视简历，模拟面试，重新规划你的职业生涯。
之前我写了一篇如何准备技术面试的文章，得到了不少读者的支持，也给了我更多动力把求职系列教程写下去。
面试前要准备的第一件事就是写简历，从零开始写简历是一件痛苦的事，因为它既重要又耗时。现在就有很多求职者在电脑前急躁不安地搜索合适的简历模版和参考例句，却不知道如何下笔。有的求职者写完简历后连自己都不忍心看，错别字连篇，排版混乱就投出去，海投简历没有回应也理所当然。而且程序员工资相对较高，有大量人才从其他专业转来，竞争非常激烈，所以如何从众多简历中脱颖而出，赢得面试的机会就非常重要了。这篇文章会从两个方面介绍简历的常见问题。
 简历中的常见错误
 简历应该怎么写
  看完之后，读者就能从中学习到如何写一份能吸引住 HR 眼光的更好的简历。

简历中的常见错误 1. 信息过多，缺乏重点 常见表现是十几行的技能列表，我举一个血淋淋的 iOS 求职者的例子：
 没错，这就是我收到的一份简历的开头，20行 的熟悉掌握。这位求职者开始就把自己接触过的所有工具都列出来，希望通过长长的技能列表突显自己的经验和学习能力，但是却适得其反，因为大部分人遇到大段文字都会选择跳读，不信你回头看看，第3行 和 14行 其实是一样的。（我稍微修改了原本的简历），HR 只有从简介或者基本介绍中觉得求职者初步符合资格了，才会认真把简历看下去，其余情况都是快速搜索关键字。例如要招前端工程师，HR会先搜索 Vue，React，jQuery 等前端框架的关键字，如果看了 10秒 都没找到的话，就会看下一份。所以越简洁清晰的简历，HR 反而越有可能认真看。这里有个小技巧，投简历不要扎堆在周末或者周一投，而应该在平日投。周一是最多简历需要处理的时候，HR 花费在每份简历上的时间会相应变少，同时，HR 会倾向于把同一天的求职者当成竞争对手，从中挑选合适的再进行通知。
长清单的另外一个问题是，当 HR 扫到里面有几行是一些非常基础的技能时，可能会开始质疑求职者的技术能力。想象下，终于到周末休息了，你想找部轻松的电影看看，上网搜索到一个 20大 最佳喜剧电影榜单。当你快速浏览的时候，如果发现好几项都看过，而且一点都不好笑，这个情况下，你就会开始怀疑这个喜剧电影排行榜有问题，不会继续看下去，HR 看技能列表也是一样的，清单越长，疑虑以及问题可能也越多。 那么技能列表应该这么写呢？因为 HR 可能是工程师，也可能是非技术员工，所以技能列表也应该简短而排版清晰，让外行人也能快速定位技能。我建议参考这种方式（按熟练度降序，但不要强调熟练度）：
 后端框架：Django, Flask, Scrapy
前端框架：Vue, React, jQuery
数据库：Redis, MySQL
其他：Docker, Jenkins, Git
外语：大学英语六级，能流畅阅读英文文档
 就是如此简短，让 HR 能快速定位到求职者的技能，做出是否看下去的判断。另外这个技能列表应该放在简介之后，我们之后会介绍。
2. 无意义描述 第二个常见错误就是叙述项目经验的时候进行无意义的描述：
 XXX平台
根据项目任务要求完成爬虫模块，前端展示模块，完成数据整理与入库功能。
 HR无法从这样的描述中得到有效的信息，也无法判断求职者的技术能力。需要根据</description>
    </item>
    
    <item>
      <title>系统设计面试 101</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95-101/</link>
      <pubDate>Sun, 21 Jul 2019 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95-101/</guid>
      <description>求职系列文章：
 如何准备技术面试 如何写一份更好的简历 程序员国外求职指南  面试流程 这篇文章并不是教读者如何构建一个高可用的系统，而是着重于阐述系统面试的具体流程以及常见的错误，系统设计流程总体可以分成 5个 部分，总时长约一个小时
 确定范围（5分钟） 粗略计算（5分钟） 整体架构（5分钟） 组件架构（20分钟） 架构优化（20分钟）  1. 确定范围 系统面试开始之时，面试官可能只会提出一个问题：
 “如何设计 Uber 这样的应用？”
“如何设计 Whatsapp 这样的应用？”
 如果你刚参加工作或者刚毕业，会对如何设计一个这样的系统束手无策，要设计高可用，易扩展的系统需要广阔的计算机知识以及大量的项目经验累积，也往往需要一个团队配合设计以及多个版本的迭代。所以，面试官并不期待你可以在一小时内把 Uber 或者 Whatsapp 的全部功能都设计出来。系统设计面试真正考核的是
 把抽象问题转变成实际工程中能够解决的简单问题 利用自己现有的知识设计一个基本可用的系统 观察现有方案可能出现的瓶颈并提出解决方案  第一阶段，确定范围就显得特别重要了。我们需要先与面试官讨论该系统
 需要实现的功能点 用户量，数据存储量，两者的增长量以及其他限制条件  1.1 需要实现的功能点 如果你之前没有使用过这些应用（Uber, Whatsapp)，不要害怕通过提问来确认功能点。（这并不奇怪，2016年，美国有三分之一人没听过 Uber 或者 Lyft）。用来确认功能点的问题有：
 用户可以使用这个应用做什么？
这个应用有什么与众不同的功能？
 设计架构本身花不了多少时间，我们值得投资更多时间在了解清楚问题中。切记，不要没有理解问题就动手设计。本文以设计 Uber 为例，Uber 包括多项功能，前端工程师关注显示地图，司机位置更新，日志传输。后端工程师关注车辆预订（包含定价，派单，司机信息），费用支付，用户评价，日志分析。我们先把想到的功能点都列在白板上，这里以后端工程师为例：
第一步，我们从中选出几项主要功能，在 Uber 中，车辆预订功能最为重要，确定好之后与面试官进行确认：
 “我先从这些功能开始进行设计可以吗？”
 我们必须经过面试官对设计的功能点认可才能进行接下来的系统设计。
1.2 用户量，数据存储量，两者的增长量以及其他限制条件 接下来我们需要了解
 “每秒有多少用户预订车辆？有多少数据需要存储？用户每个月的增长量是多少？对响应时间以及服务器数量有没有限制？”</description>
    </item>
    
    <item>
      <title>程序员国外求职指南</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9B%BD%E5%A4%96%E6%B1%82%E8%81%8C%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 21 Nov 2018 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9B%BD%E5%A4%96%E6%B1%82%E8%81%8C%E6%8C%87%E5%8D%97/</guid>
      <description>本文章由 ResumeJob 贡献，ResumeJob 能帮助你审视简历，模拟面试，重新规划你的职业生涯。
求职系列文章：
 如何准备技术面试 如何写一份更好的简历  我去年第一次到欧洲中西部旅游，旅程中给我的感受是他们更懂得享受生活。印象最深刻的是一次在法国的普通小镇，南希，我和朋友到当地的酒吧 Les Berthom Nancy 喝酒，吧台里有一名典型的高帅法国服务生。过了一会服务生下班了，他换下了制服却没有离开，而是坐到我们旁边点了一杯啤酒自顾自喝起来，那一刻我突然觉得他过得比我要幸福得多。另外一次，之前在 TX 面试的时候，与面试官闲聊的时候我问他，你在这里工作开心吗？他看着我，想了一下然后回答，“我在这里工作了四年没有人问过我这个问题，我想的只是努力地去做好一款产品。” 我很欣赏他为公司付出的努力，同时也惊讶于四年来没有人问他工作得开不开心。国内企业普遍缺乏不同国家与背景的人才，身边的人与自己往往有类似的成长背景，加上等级森严的层级关系，工程师像是复制粘贴出来的。在那次面试后，每一次面试我都会问自己，我真的想在这里工作吗？
或许就在这两个瞬间，到国外工作的想法就埋在我脑里了。几个月来，我一直在找国外的工作机会，经过过百份简历的投递和海量的面试（我面试了美国，加拿大，英国，欧洲，新加坡，香港这几个地方加起来超过 20 次），最终决定到柏林的一家创业公司工作，他们像我一样热爱开源，还有令人激动的产品以及充满多样性的员工，来自不同国家与背景，这两点在国内都不常见。这篇文章从我的亲身经历出发，希望能给国外求职的各位一些帮助。
前期规划 自信 记得在电影《独立游戏大电影》中的主人公 Tommy 自我介绍说，我非常非常擅长编程。当时在屏幕前的我第一反应是被吓到了，虽然程序员之间存在鄙视链，但是我接触的大部分的程序员都谦逊而不擅于线下社交，从没听过自己非常擅长编程这样的直白。第二反应是有些不屑，我当时觉得要像 Linus 这样的程序员才能自称非常擅长编程吧，一般人配不上非常擅长这几个字。不过后来我慢慢明白，这或许是国内教育给我的烙印，缺乏自信而且不擅长表现自己。其实不需要成为 Linus 才能自称擅长编程，认真钻研于一个领域，有一定的技术能力，无论是做业务开发，运维管理还是人工智能，只要有人喜欢你的代码编织出来的产品，那么你就已经比世界上 90% 的程序员要优秀了。所以前期规划中，建立自信是最重要的，出国工作并不难，对学历和技术的要求也不高，只要有出国的意愿都应该去尝试。
硬实力 自信心之外就是硬实力。主要包括语言能力与工作能力。有时候语言能力甚至比工作能力本身更重要，所以该专注于哪个方向，取决于你现在的程度。（小提示：如果职位描述是英语的话，代表求职者擅长英语即可，除非描述中额外注明）
英语水平：
 听
面试官可能来自各个国家，口音有轻有重，其中印度与法国的口语比较难听懂，当两个英语都不好的人用英语互相面试，体验难以置信地差。记得有一次面试中我把 Symmetric and Asymmetric 听成了 Synchronize and Asynchronous，回答了一通之后，面试官给了我一个疑惑的表情然后说了句 &amp;ldquo;Forget about it&amp;rdquo;。所以如果你的英语听力也不好，建议上 Udacity 和 YouTube 编程频道练习听力，起码要熟悉一些常见的技术名词是怎么读的。不然面试的时候根本无法回答。
 说
面试前我找了一位英语老师（wx: bohe_yoyo）上了 10节 模拟面试的课程，她问我一些常见的面试问题，然后再根据我的回答给出反馈以及建议，所以在真实面试中，有不少问题我都曾经遇过，回答起来也就得心应手，在下面的章节我也会举一些常见的例子。另外，我还使用 Pramp 进行算法模拟面试，系统会自动匹配一名工程师与你交替做面试官和求职者，求职者需要使用半小时解决一道算法题并与面试官保持沟通。我匹配了几次，从一开始的战战兢兢到现在的心如止水，真正感受到 Pramp 的名字所暗示的 Practice makes Perfect，Pramp 既训练算法还训练表达能力，实在是两全其美，关键的是它还是免费的。
 读
阅读部分，最好是阅读自己感兴趣领域的文章，我从两年前开始每天阅读 Hackernews 的文章，里面发布着业内最新的资讯，有些文章艰深而且词汇量多，不像文档那么易读。令我坚持下来的是这里聚集着全球最优秀的工程师以及最新的科技资讯。两年后，我的阅读能力大有进步，现在能阅读原文的技术书籍，这部分没有捷径，只有每天积累。</description>
    </item>
    
    <item>
      <title>劳动法赔偿 101</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%8A%B3%E5%8A%A8%E6%B3%95%E8%B5%94%E5%81%BF101/</link>
      <pubDate>Tue, 25 Dec 2018 14:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E5%8A%B3%E5%8A%A8%E6%B3%95%E8%B5%94%E5%81%BF101/</guid>
      <description>注：本文适用于中国大陆地区，不同地区的劳动仲裁情况可能有所差异
 “《劳动法》与《劳动合同法》是保护劳动者的。”
 这是我经历劳动法维权时，律师朋友对我说的话，当初听起来只觉得是泛泛而谈，但当我为了维权而了解案例，研读法律法规的时候却慢慢感受到这句话的力量，也给了我争取合法权利的勇气。我的维权经历不算美好的回忆，当时的用人单位愿意按法律赔偿，但是其中涉及了离职证明内容，赔偿金额细节的商讨，所以结果不算愉快，但却是一个不错的职场经验。而且到最后你往往发现，即使你与上司的私交再好，离职的时候他也会站在用人单位的角度来处理事情。在此期间，我非常幸运有一位律师协助我处理，并最后得到我比较满意的结局。从我的经验来说，劳动纠纷时，先与用人单位进行协商会是比较好的方法，因为真正走劳动仲裁确实费时费力，准备资料，走法院，等待，最后拿到的钱还会打折。有些老板或者 HR 只是抓住劳动者不懂法的弱点以离职证明，调岗或其他手段侵害劳动者的权利。所以你不一定走到劳动仲裁这步，只需要向用人单位提出法律依据，让他们知道你懂法，而且他们很大概率会败诉的情况即可，毕竟他们都喜欢欺负软柿子。当然，在此之前首先你要知道自己有什么权利，才能知道如何谈判以及让步。从我身边的案例来看，劳动者与用人单位发生劳动纠纷时，大部分情况下都是优势方。如果因为不懂法或者不想付出时间精力而放弃自己的权利，是逃避的行为，因为你无法担保下次会不会出现类似的情况。所以，不需要害怕与他们据理力争，用人单位比我们更害怕劳动法。我希望这篇文章能帮到面临劳动法赔偿的各位，因为谁也不知道下一个被解雇的是不是自己。
阅读本文之前，请大家花 5分钟粗略阅读劳动法，劳动合同法以及劳动合同法实施条例，它们比技术文档易读得多，不过相对细节也较少，没有对一些边界条件进行定义，当然也没有源码，需要参考实际案例的裁决，不过对基本条款有初步的了解是非常重要的。
赔偿金额 常见的赔偿方式为标准赔偿以及双倍赔偿：
 《劳动合同法》第四十七条：经济补偿按劳动者在本单位工作的年限，每满一年支付一个月工资的标准向劳动者支付。六个月以上不满一年的，按一年计算；不满六个月的，向劳动者支付半个月工资的经济补偿。
劳动者月工资高于用人单位所在直辖市、设区的市级人民政府公布的本地区上年度职工月平均工资三倍的，向其支付经济补偿的标准按职工月平均工资三倍的数额支付，向其支付经济补偿的年限最高不超过十二年。
本条所称月工资是指劳动者在劳动合同解除或者终止前十二个月的平均工资。应发工资是指劳动者提供正常劳动按照法律规定应当获得的全部工资，包括了基本工资、加班工资、奖金、津贴等。实发工资是劳动者每月实际拿到的工资，通常会被扣减一些费用，比如代扣代缴社会保险费、所得税，扣伙食费、房租费等，劳动者实际到手的金额通常会比应发工资少。经济补偿金的计算应当以劳动者的应发工资作为基数，而不是以基本工资、实发工资为基数。
 标准赔偿：工作年限（包括试用期）超过六个月，赔偿一个月工资，超过一年少于一年半，赔偿一个半月工资，以此类推，这就是常说的赔偿 N 个月，N 在这里指的是工作年限。如果用人单位没有提前 30天 通知劳动者就解除劳动合同，需要额外支付一个月的工资，这就是 N+1 赔偿。
双倍赔偿：标准赔偿乘以 2，只有在违法解雇的情况下才适用。
要注意，这里的月工资是指劳动者提供正常劳动按照法律规定应当获得的全部工资，包括了基本工资、加班工资、奖金、津贴等。不扣除代缴社会保险费、所得税，扣伙食费、房租费等。（谢谢 Zhang_Siayng 的指正）
加班费 很可惜，我没有找到维权成功拿到加班费的案例（欢迎大家提供），举证其实不难，最高人民法院在劳动争议相关司法解释中，对加班费举证责任问题作出了明确规定：“劳动者主张加班费的，应当就加班事实的存在承担举证责任。但劳动者有证据证明用人单位掌握加班事实存在的证据，用人单位不提供的，由用人单位承担不利后果。” 也就是说，与劳动仲裁争议事项有关的证据属于用人单位掌握管理的，用人单位应当依法提供，用人单位不提供的，应当承担不利后果。 但是用人单位往往会在劳动合同中说明工资是包含加班费来逃避支付加班费。而且当劳动者每月领取工资条，表明其已知悉工资（包含加班费）的具体数额及计算方式，但却未曾向公司对加班费的基数及计算方法提出任何异议的话，这样的情况，法院一般不支持加班费的赔偿。
工作阶段 我把工作阶段分成四个阶段：
   阶段 事件后 事件前     入职 接受了口头或者书面 offer 签署劳动合同   试用期 签署劳动合同 试用期结束   在职期 试用期结束 离职   离职期 自行离职 / 被解雇 / 协商解除合同 /    入职阶段 入职阶段不会涉及劳动赔偿法，一般发生经济赔偿的情况是用人单位撤回 offer。</description>
    </item>
    
    <item>
      <title>我们只追逐豪门（译）</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%88%91%E4%BB%AC%E5%8F%AA%E8%BF%BD%E9%80%90%E8%B1%AA%E9%97%A8%E8%AF%91/</link>
      <pubDate>Sat, 02 Mar 2019 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E6%88%91%E4%BB%AC%E5%8F%AA%E8%BF%BD%E9%80%90%E8%B1%AA%E9%97%A8%E8%AF%91/</guid>
      <description>两年前，我在 HN 看到这篇文章，至今仍时常出现在我的脑中。文中谈到了问题在国内同样也在发生，我了解的许多公司招聘的时候只专注于“大厂”，“211/985” 这些标签，而不是求职者的真实能力。在某程度上，这也限制了阶级向上流动。这篇文章提出了一些有趣的解决方法，以下是原文翻译：
我的好友 Mike 最近在找一份新工作，他刚刚以合同工的身份被微软解雇，我身边不少朋友也有类似的遭遇。和我一样，Mike 也有十一年的硬件行业工作经验，不同的是他并不认识那些身在豪门的工程师。所以我把他的简历内推给了一些急需招聘的工程师朋友。朋友们都认为 Mike 的简历不错，但大多数招聘人员在却在简历关就拒绝了他。
被拒绝的原因通常是：
 “没有相关领域的工作经验。”
“涉猎太广泛，支付，移动开发，数据分析和用户体验都有接触过。”
“通常来说合约工技术水平不高。”
 其中有一家公司 TrendCo，与其他数以千计的公司同样声称拥有世界一流的工程师，并且只会雇用最好的工程师。这几个回应是他们的招聘人员通过工程师传达给我的，工程师对这些回应也表示不满。但这确实代表了一大批公司对 Mike 的普遍反应。
  “Mike 是一名 .NET 开发者，我们不喜欢有 Windows 开发经验的工程师”
 我熟悉 TrendCo 的现状，不少员工都说已经火烧眉头了，他们核心系统的 QPS 低于 1k，高负载下偶尔会宕机。Mike 研发过可以承受更高数量级负载的系统，但他的经验显然是，无关紧要的。
 我曾经面试过 TrendCo，他们的吸引点之一是它是一个创业公司，你能够接触各种各类的工作。TrendCo 需要聘请多面手，但 Mike 的对于他们来说显然是，涉猎过多。
 和第一点一样，TrendCo 还抱怨 Mike 不是他们想要的类型，TrendCo 的大部分员工都是刚刚从一些最好的学校毕业 0-2年 的工程师。他们没有太多招聘的经验，大多数时候他们都选择从一些热门的大公司中进行招聘，而不是一些像微软这些无聊的公司。
  无论你认为这种偏向某种类型而且拒绝其他类型的做法是否不妥，正如 Thomas Ptacek 所指出的，如果你目标人才的类型与其他人的类型相同，那么“你正在与市场上最富有的（或资金过剩的）科技公司竞争“。
如果你看看萌新工程师的招聘数据，脸书给刚毕业的工程师超过 10万 美金一年，10万 的签约奖金，15万 的受限股票，加起来大概 16万 美金一年。而且第一年 24万 美金，谷歌也给了大概 10万 一年，1万 左右的签约奖金，18万7千 的受限股票，虽然比脸书低点，但是比很多那些宣称只招聘最优秀的工程师的公司要高得多，而且他们为了争夺工程师还可能会给更高，一些有经验的工程师得到的工资远比你想象的要高，如果你不是招聘人员，他们的薪酬水平很可能会高于您的预期。</description>
    </item>
    
    <item>
      <title>编程语言选择（未完成）</title>
      <link>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9%E6%9C%AA%E5%AE%8C%E6%88%90/</link>
      <pubDate>Tue, 27 Feb 2018 00:10:14 +0800</pubDate>
      
      <guid>https://www.enginego.org/%E5%9F%BA%E7%A1%80/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E9%80%89%E6%8B%A9%E6%9C%AA%E5%AE%8C%E6%88%90/</guid>
      <description> 刚开始学习编程的时候，我也很困惑这个问题，有那么那么多的编程语言，常见的有
 python ruby php Go c java R &amp;hellip;  我们可以根据你的职业职业规划来选择要学习的语言：
前端工程师  完成设计 后端交互  前端工程师主要的职责是把设计师的设计图实现，当设计师设计完界面之后
![design]()
完成设计 前端工程师需要用代码来实现设计图，例如界面的布局，按钮的颜色等等。这期间需要和设计师合作交流，讨论哪些方面在工程实现中可能会有困难，可能影响性能这类的因素。
后端交互 完成设计之后，前端工程师需要根据不同的页面以及业务逻辑来与后端交互，这句话什么意思呢？假如你开发的是一个让用户写日记的应用。那么当用户写完日记之后，点击保存按钮，这个按钮要触发一个保存日记的事件，需要把日记根据协议传输到服务器，然后存储在数据库里面。听起来有点复杂，其实非常简单，因为都有通用的工具帮助你完成。
后端工程师。  业务逻辑处理 前端交互  业务逻辑处理 前端交互 运维工程师 数据分析／机器学习工程师 </description>
    </item>
    
  </channel>
</rss>